{"version":3,"file":"static/js/681.ce9441ff.chunk.js","mappings":"uQACA,IAAMA,EAAM,gCACNC,EAAM,mCAECC,EAAgB,WAC3B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAAqCC,IAAOG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACjE,EAEYC,EAAa,SAACC,GACzB,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAgBQ,EAAhB,oBAA8BP,IAAOG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAC1D,EAEYG,EAAY,SAACD,GACxB,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAgBQ,EAAhB,4BAAsCP,IAAOG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAClE,EAEYI,EAAc,SAACF,GAC1B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,iBAAgBQ,EAAhB,4BAAsCP,IAAOG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAClE,EAEYK,EAAc,SAACC,GAC1B,OAAOT,MAAM,GAAD,OAAIH,EAAJ,uCAAsCC,EAAtC,kBAAmDW,IAASR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACjF,C,uGC6BD,UA7CgB,WACZ,IAAOO,GAAYC,EAAAA,EAAAA,MAAZD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAsBF,OApBEC,EAAAA,EAAAA,YAAU,YACNd,EAAAA,EAAAA,IAAYG,GACTT,MAAK,SAAAqB,GACAA,EAASC,SAAWD,EAASC,QAAQC,OAAS,GAChDV,EAAWQ,EAASC,SACpBH,GAAY,KAEZN,EAAW,IACXM,GAAY,GAEf,IACAK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZR,GAAY,EACb,IACAW,SAAQ,WACPb,GAAa,EACd,GACJ,GAAE,CAACN,KAGN,iBAAKoB,UAAU,YAAf,UACGf,IAAa,SAAC,IAAD,IACbE,IAAY,SAAC,IAAD,IACZE,IAAY,wBAAI,4BAChBN,GAAWA,EAAQW,OAAS,IAC1B,yBACIX,EAAQkB,KAAI,SAAAC,GAAM,OACjB,4BACA,eAAGF,UAAU,wBAAb,UAAqC,YAAQ,iBAAMA,UAAU,iBAAhB,SAAkCE,EAAOC,aACtF,cAAGH,UAAU,aAAb,SAA2BE,EAAOE,YAFxBF,EAAO3B,GADA,QAU9B,C,oEClDY8B,EAAQ,WACjB,OAAO,wBAAI,wBACd,C","sources":["components/Request.jsx","components/Reviews.jsx","components/common/Error.jsx"],"sourcesContent":["\nconst url = 'https://api.themoviedb.org/3/';\nconst key = '44cd7d40e9c9ffc80f6b2e51bac6d9ee'; \n\nexport const fetchTrending = () => {\n  return fetch(`${url}trending/movie/day?api_key=${key}`).then(res => res.json());\n}\n\nexport const fetchMovie = (id) => {\n  return fetch(`${url}movie/${id}?api_key=${key}`).then(res => res.json());\n} \n\nexport const fetchCast = (id) => {\n  return fetch(`${url}movie/${id}/credits?api_key=${key}`).then(res => res.json());\n}\n\nexport const fetchReview = (id) => {\n  return fetch(`${url}movie/${id}/reviews?api_key=${key}`).then(res => res.json());\n}\n\nexport const fetchSearch = (query) => {\n  return fetch(`${url}search/movie?page=1&api_key=${key}&query=${query}`).then(res => res.json())\n}\n \n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from './common/Loader';\nimport { Error } from './common/Error';\nimport { fetchReview } from './Request';  \n\nconst Reviews = () => {\n    const {movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n    const [isLoading, setIsloading] = useState(true);\n    const [hasError, setHasError] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n\n    useEffect(() => {\n        fetchReview(movieId)\n          .then(response => {\n            if (response.results && response.results.length > 0) {\n              setReviews(response.results);\n              setNotFound(false);\n            } else {\n              setReviews([]);  \n              setNotFound(true);\n            }\n          })\n          .catch(err => {\n            console.log(err);\n            setHasError(true);\n          })\n          .finally(() => {\n            setIsloading(false);\n          });\n      }, [movieId]);\n\n  return (\n    <div className=\"container\"> \n      {isLoading && <Loader />}\n      {hasError && <Error />}\n      {notFound && <h5>We don't have reviews. </h5>}\n      {reviews && reviews.length > 0 && (\n         <div>\n            {reviews.map(review => (\n              <div key={review.id} >   \n              <p className=\"fw-light fw-bold pt-2\">Author: <span className=\"text-info fs-6\">{review.author}</span></p>\n              <p className=\"fst-italic\">{review.content}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Reviews;","export const Error = () => {\n    return <h2>Error loading movies</h2>\n}"],"names":["url","key","fetchTrending","fetch","then","res","json","fetchMovie","id","fetchCast","fetchReview","fetchSearch","query","movieId","useParams","useState","reviews","setReviews","isLoading","setIsloading","hasError","setHasError","notFound","setNotFound","useEffect","response","results","length","catch","err","console","log","finally","className","map","review","author","content","Error"],"sourceRoot":""}