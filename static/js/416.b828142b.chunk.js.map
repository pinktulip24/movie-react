{"version":3,"file":"static/js/416.b828142b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieItems/MovieItem.module.css?63f1","components/MovieItems/MovieItem.jsx","components/Request.jsx","components/common/Error.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"custom-img-size\":\"MovieItem_custom-img-size__rPLbw\"};","import { useParams, NavLink, Outlet, useLocation, Link} from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { Loader } from '../common/Loader';\nimport { Error } from '../common/Error';\nimport { fetchMovie } from '../Request';\nimport css from './MovieItem.module.css';\n\nconst MovieItem = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [isLoading, setIsloading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovie(movieId)\n      .then(response => {\n        if (response.success === false) {\n          setMovieData(null);\n          setNotFound(true);\n        } else {\n          setMovieData(response);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        setHasError(true);\n      })\n      .finally(() => {\n        setIsloading(false);\n      });\n  }, [movieId]);\n  return (\n    <div className=\"container\">\n      <Link to={location?.state?.from ?? '/'}\n      className=\"btn btn-light mb-3 mt-1\">\n      {'\\u2190'} Go Back\n      </Link>\n      {isLoading && <Loader />}\n      {hasError && <Error />}\n      {notFound && <h1>Requested movie does not exist</h1>}\n      {movieData && (\n        <div className=\"card mb-3\">\n          <div className=\"row g-0\">\n            <div className=\"col-md-4 d-flex justify-content-center align-items-center d-md-block\">\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movieData.poster_path}`}\n                alt=\"Movie Poster\"\n                className={`img-fluid rounded-start ${css['custom-img-size']} `}\n              />\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title fs-2 fw-bold pb-3\">\n                  {movieData.title ?? 'Unknown'}\n                  <span>({movieData.release_date.split('-')[0]})</span>\n                </h4>\n                <p className=\"card-text pb-2\"> User score:\n                  <span className=\"card-text fw-light\"> {(movieData.vote_average * 10).toFixed(0)}% </span>\n                </p>\n                <p className=\"card-text fs-6 fw-bold\">Overview:</p>\n                <span className=\"card-text fw-light pt-1\"> {movieData.overview}</span>\n                <p className=\"card-text fs-6 fw-bold mt-4\">Genres:</p>\n                {movieData.genres && movieData.genres.length > 0 && (\n                  <span className=\"card-text fw-light\"> {movieData.genres.map(genre => genre.name).join(', ')}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title fs-4 fw-bold p-3\"> Additional information: </h4>\n                <ul className=\"nav col-12 col-lg-auto me-lg-auto gap-5 pb-3 mb-3\">\n                  <li>\n                    <NavLink\n                      className=\"nav-link px-3 mx-2 text-dark border btn btn-hover btn-info\"\n                      to=\"cast\"\n                      state={{ from: location?.state?.from ?? '/' }} \n                    > Cast \n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink\n                      className=\"nav-link px-3 text-dark border btn btn-hover btn-info\"\n                      to=\"reviews\"\n                      state={{ from: location?.state?.from ?? '/' }} \n                    > Reviews \n                    </NavLink>\n                  </li>\n                </ul>\n                <Suspense fallback={<Loader />}>\n                  <Outlet />\n                </Suspense>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieItem;\n","\nconst url = 'https://api.themoviedb.org/3/';\nconst key = '44cd7d40e9c9ffc80f6b2e51bac6d9ee'; \n\nexport const fetchTrending = () => {\n  return fetch(`${url}trending/movie/day?api_key=${key}`).then(res => res.json());\n}\n\nexport const fetchMovie = (id) => {\n  return fetch(`${url}movie/${id}?api_key=${key}`).then(res => res.json());\n} \n\nexport const fetchCast = (id) => {\n  return fetch(`${url}movie/${id}/credits?api_key=${key}`).then(res => res.json());\n}\n\nexport const fetchReview = (id) => {\n  return fetch(`${url}movie/${id}/reviews?api_key=${key}`).then(res => res.json());\n}\n\nexport const fetchSearch = (query) => {\n  return fetch(`${url}search/movie?page=1&api_key=${key}&query=${query}`).then(res => res.json())\n}\n \n","export const Error = () => {\n    return <h2>Error loading movies</h2>\n}"],"names":["movieId","useParams","useState","movieData","setMovieData","isLoading","setIsloading","hasError","setHasError","notFound","setNotFound","location","useLocation","useEffect","fetchMovie","then","response","success","catch","err","console","log","finally","className","to","state","from","Loader","Error","src","poster_path","alt","css","title","release_date","split","vote_average","toFixed","overview","genres","length","map","genre","name","join","Suspense","fallback","url","key","fetchTrending","fetch","res","json","id","fetchCast","fetchReview","fetchSearch","query"],"sourceRoot":""}